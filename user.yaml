- name: USER
  hosts: user
  become: yes
  tasks:
  - name: Disabling Old NodeJs and Enabling New NodeJs Version
    ansible.builtin.shell: dnf module disable nodejs -y ;dnf module enable nodejs:18 -y;

  - name: Installing Nodejs
    ansible.builtin.package:
      name: nodejs
      state: present

  - name: Creating User
    ansible.builtin.user:
      name: roboshop

  - name: Creating App Directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: Downloading App
    ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/user.zip
      dest: /tmp

  - name: Installing App
    ansible.builtin.unarchive:
      src: /tmp/user.zip
      dest: /app
      remote_src: yes

  - name: Installing Dependencies
    ansible.builtin.shell: npm install
    args:
      chdir: /app

  - name: Configuring User Service
    ansible.builtin.copy:
      src: user.service
      dest: /etc/systemd/system/

  - name: Creating Mongodb Repo
    ansible.builtin.copy:
      src: mongo.repo
      dest: /etc/yum.repos.d/

  - name: Installing Mongodb Client
    ansible.builtin.package:
      name: mongodb-org-shell
      state: present

  - name: Cheching Schema
    ansible.builtin.shell: mongo --host mongodb.ladoo.shop --quiet --eval 'db = db.getSiblingDB("users"); db.users.count()'
    register: usercount

  - name: Loadind Schema
    ansible.builtin.shell: mongo --host mongodb.ladoo.shop < /app/schema/user.js
    when: usercount.stdout == "0"

  - name: Reloading Daemon
    ansible.builtin.systemd_service:
      daemon_reload: true

  - name: Enabling And Starting User Service
    ansible.builtin.service:
      name: user
      state: restarted
      enabled: yes
